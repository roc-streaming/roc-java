plugins {
    id 'maven'
    id 'signing'
    id 'com.android.library'
    id 'de.mannodermaus.android-junit5'
}

ext {
    apiLevel = System.getProperty('API') ?: System.getenv('API')
    buildToolsVersion = System.getProperty('BUILD_TOOLS_VERSION') ?: System.getenv('BUILD_TOOLS_VERSION')
    androidNdkVersion = System.getProperty('NDK_VERSION') ?: System.getenv('NDK_VERSION')
    ROC_BASE_DIR = System.getProperty('ROC_BASE_DIR') ?: System.getenv('ROC_BASE_DIR') ?: file("../build/libroc").absolutePath
    ossrhUsername = System.getProperty('OSSRH_USERNAME') ?: System.getenv('OSSRH_USERNAME')
    ossrhPassword = System.getProperty('OSSRH_PASSWORD') ?: System.getenv('OSSRH_PASSWORD')
    signingKeyId = System.getProperty('SIGNING_KEY_ID') ?: System.getenv('SIGNING_KEY_ID')
    signingPassword = System.getProperty('SIGNING_PASSWORD') ?: System.getenv('SIGNING_PASSWORD')
    signingKey = System.getProperty('SIGNING_KEY') ?: System.getenv('SIGNING_KEY')
}

android {
    compileSdkVersion "${apiLevel}".toInteger()
    buildToolsVersion "${buildToolsVersion}"
    ndkVersion "${androidNdkVersion}"

    defaultConfig {
        minSdkVersion 26
        targetSdkVersion "${apiLevel}".toInteger()

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        testInstrumentationRunnerArgument "runnerBuilder", "de.mannodermaus.junit5.AndroidJUnit5Builder"

        externalNativeBuild {
            cmake {
                arguments "-DROC_BASE_DIR=${ROC_BASE_DIR}", "-DANDROID_STL=c++_shared"
            }
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    packagingOptions {
        exclude "META-INF/LICENSE*"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    sourceSets {
        main {
            java.srcDirs +=  "../../src/main/java" 
            // pack roc shared library into aar
            jniLibs.srcDirs += "${ROC_BASE_DIR}/lib"
            manifest.srcFile 'AndroidManifest.xml'
        }
        androidTest {
            java.srcDirs += "../../src/test/java"
        }
    }

    externalNativeBuild {
        cmake {
            path "../../roc_jni/CMakeLists.txt"
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    androidTestImplementation "androidx.test:runner:1.2.0"
    androidTestImplementation "org.junit.jupiter:junit-jupiter-api:5.6.2"
    androidTestImplementation "org.junit.jupiter:junit-jupiter-params:5.6.2"
    androidTestImplementation "de.mannodermaus.junit5:android-test-core:1.2.0"
    androidTestRuntimeOnly "de.mannodermaus.junit5:android-test-runner:1.2.0"
    androidTestImplementation 'org.awaitility:awaitility:3.1.6'

    testImplementation "org.junit.jupiter:junit-jupiter-api:5.6.2"
    testImplementation "org.junit.jupiter:junit-jupiter-params:5.6.2"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:5.6.2"
    testImplementation 'org.awaitility:awaitility:3.1.6'
}

task sourcesJar(type: Jar) {
    archiveClassifier.set('sources')
    from android.sourceSets.main.java.srcDirs
}

task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    archiveClassifier.set('javadoc')
    from javadoc.destinationDir
}


artifacts {
    archives javadocJar
    archives sourcesJar
}

nexusStaging {
    serverUrl = 'https://s01.oss.sonatype.org/service/local/'
    packageGroup = 'org.roc-streaming'
    username = ossrhUsername
    password = ossrhPassword
}

signing {
    if (signingKeyId?.trim() && signingKey?.trim() && signingPassword?.trim()) {
        useInMemoryPgpKeys(signingKeyId, signingKey, signingPassword)
        sign configurations.archives
    }
}

uploadArchives {
    repositories {
        mavenDeployer {
            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

            repository(url: "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/") {
                authentication(userName: ossrhUsername, password: ossrhPassword)
            }

            snapshotRepository(url: "https://s01.oss.sonatype.org/content/repositories/snapshots/") {
                authentication(userName: ossrhUsername, password: ossrhPassword)
            }

            pom.project {
                name project.name
                packaging 'aar'
                description 'Android library for Roc Toolkit'
                url 'https://github.com/roc-streaming/roc-java'

                scm {
                    connection 'scm:git:git://github.com/roc-streaming/roc-java.git'
                    developerConnection 'scm:git:ssh://github.com:roc-streaming/roc-java.git'
                    url 'https://github.com/roc-streaming/roc-java'
                }

                licenses {
                    license {
                        name 'MIT'
                    }
                }

                developers {
                    developer {
                        id 'abushmin'
                        name 'Andrey Bushmin'
                        email 'diskbu@yandex.ru'
                    }
                    developer {
                        id 'gavv'
                        name 'Victor Gaydov'
                        email 'victor@enise.org'
                    }
                    developer {
                        id 'MatteoArella'
                        name 'Matteo Arella'
                        email 'arella.matteo.95@gmail.com'
                    }
                }
            }
        }
    }
}
