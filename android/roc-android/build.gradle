plugins {
    id "maven-publish"
    id "signing"
    id "com.android.library"
    id "de.mannodermaus.android-junit5"
    // io.franzbecker.gradle-lombok doesn't work on android, so we use
    // io.freefair.android-lombok instead
    id "io.freefair.android-lombok"
}

ext {
    // these default values must be in-sync with ones in android_docker.sh
    sdkLevel = System.getProperty("SDK_LEVEL") ?: System.getenv("SDK_LEVEL") ?: "31"
    apiLevel = System.getProperty("API_LEVEL") ?: System.getenv("API_LEVEL") ?: "29"

    androidNdkVersion = System.getProperty("NDK_VERSION") ?:
        System.getenv("NDK_VERSION") ?:
        "26.3.11579264"

    buildToolsVersion = System.getProperty("BUILD_TOOLS_VERSION") ?:
        System.getenv("BUILD_TOOLS_VERSION") ?:
        "35.0.0"

    rocDir = System.getProperty("ROC_DIR") ?:
        System.getenv("ROC_DIR") ?:
        file("../build/libroc").absolutePath

    signingKeyId = System.getProperty("SIGNING_KEY_ID") ?: System.getenv("SIGNING_KEY_ID")
    signingPassword = System.getProperty("SIGNING_PASSWORD") ?: System.getenv("SIGNING_PASSWORD")
    signingKey = System.getProperty("SIGNING_KEY") ?: System.getenv("SIGNING_KEY")

    ossrhUsername = System.getProperty("OSSRH_USERNAME") ?: System.getenv("OSSRH_USERNAME")
    ossrhPassword = System.getProperty("OSSRH_PASSWORD") ?: System.getenv("OSSRH_PASSWORD")
}

android {
    namespace "org.rocstreaming.roctoolkit"

    compileSdkVersion "${sdkLevel}".toInteger()
    buildToolsVersion "${buildToolsVersion}"
    ndkVersion "${androidNdkVersion}"

    defaultConfig {
        minSdkVersion "${apiLevel}".toInteger()
        targetSdkVersion "${apiLevel}".toInteger()

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        testInstrumentationRunnerArgument "runnerBuilder", "de.mannodermaus.junit5.AndroidJUnit5Builder"

        externalNativeBuild {
            cmake {
                arguments "-DROC_DIR=${rocDir}", "-DANDROID_STL=c++_shared"
            }
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    packagingOptions {
        exclude "META-INF/LICENSE*"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile("proguard-android-optimize.txt"),
                "proguard-rules.pro"
        }
    }

    sourceSets {
        main {
            java.srcDirs +=  "../../src/main/java"
            // pack roc shared library into aar
            jniLibs.srcDirs += "${rocDir}/lib"
            manifest.srcFile "AndroidManifest.xml"
        }
        androidTest {
            java.srcDirs += "../../src/test/java"
            resources.srcDirs += "../../src/test/resources"
        }
    }

    externalNativeBuild {
        cmake {
            path "../../roc_jni/CMakeLists.txt"
        }
    }

    publishing {
        // aar will include source jav and javadoc jar
        // this variant is referred as "components.release" in publishing task
        singleVariant("release") {
            withSourcesJar()
            withJavadocJar()
        }
    }
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])

    androidTestImplementation "androidx.test:runner:1.2.0"
    androidTestImplementation "org.junit.jupiter:junit-jupiter-api:5.6.2"
    androidTestImplementation "org.junit.jupiter:junit-jupiter-params:5.6.2"
    androidTestImplementation "de.mannodermaus.junit5:android-test-core:1.2.0"
    androidTestRuntimeOnly "de.mannodermaus.junit5:android-test-runner:1.2.0"
    androidTestImplementation "org.awaitility:awaitility:3.1.6"

    testImplementation "org.junit.jupiter:junit-jupiter-api:5.6.2"
    testImplementation "org.junit.jupiter:junit-jupiter-params:5.6.2"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:5.6.2"
    testImplementation "org.awaitility:awaitility:3.1.6"
}


// from io.freefair.android-lombok
lombok {
    version.set("1.18.30")
}


task sourcesJar(type: Jar) {
    archiveClassifier.set("sources")
    from android.sourceSets.main.java.srcDirs
}

task javadoc(type: Javadoc) {
    // run javadoc on delombok-ed sources
    // io.freefair.android-lombok creates two tasks, delombokDebug and delombokRelease
    // for javadoc we can use any of the two
    dependsOn "delombokDebug"
    source = file("$buildDir/delombokDebug")
    // disable javadoc warnings (missing comment, etc.)
    options.addStringOption("Xdoclint:none", "-quiet")
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    archiveClassifier.set("javadoc")
    from javadoc.destinationDir
}

afterEvaluate {
    // add the android sdk classes to javadoc classpath
    tasks.javadoc.classpath += files(project.android.getBootClasspath())

    // add compile classpath to javadoc classpath
    // this is needed for delombok-ed sources
    // since javadoc uses delombokDebug, we use debug variant here
    android.libraryVariants.findAll { it.name == 'debug' }.each { variant ->
        tasks.javadoc.classpath += variant.javaCompileProvider.get().classpath
    }

    // configure delombok tasks required property 'target'
    // we just need to specify output directory explicitly
    android.libraryVariants.all { variant ->
        tasks.named("delombok${variant.name.capitalize()}") {
            target.set(file("$buildDir/delombok${variant.name.capitalize()}"))
        }
    }
}


artifacts {
    archives javadocJar
    archives sourcesJar
}

nexusStaging {
    serverUrl = "https://s01.oss.sonatype.org/service/local/"
    packageGroup = "org.roc-streaming"
    username = ossrhUsername
    password = ossrhPassword
}

signing {
    if (signingKeyId?.trim() && signingKey?.trim() && signingPassword?.trim()) {
        useInMemoryPgpKeys(signingKeyId, signingKey, signingPassword)
        sign configurations.archives
    }
}

project.afterEvaluate {
    publishing {
        publications {
            release(MavenPublication) {
                from components.release

                pom {
                    name = project.name
                    packaging = "aar"
                    description = "Android library for Roc Toolkit"
                    url = "https://github.com/roc-streaming/roc-java"

                    scm {
                        connection = "scm:git:git://github.com/roc-streaming/roc-java.git"
                        developerConnection = "scm:git:ssh://github.com:roc-streaming/roc-java.git"
                        url = "https://github.com/roc-streaming/roc-java"
                    }

                    licenses {
                        license {
                            name = "MIT"
                        }
                    }

                    developers {
                        developer {
                            id = "abushmin"
                            name = "Andrey Bushmin"
                            email = "diskbu@yandex.ru"
                        }
                        developer {
                            id = "gavv"
                            name = "Victor Gaydov"
                            email = "victor@enise.org"
                        }
                        developer {
                            id = "MatteoArella"
                            name = "Matteo Arella"
                            email = "arella.matteo.95@gmail.com"
                        }
                    }
                }
            }
        }

        repositories {
            maven {
                name = "Release"
                url = uri("https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/")
                credentials {
                    username = ossrhUsername
                    password = ossrhPassword
                }
            }

            maven {
                name = "Snapshot"
                url = uri("https://s01.oss.sonatype.org/content/repositories/snapshots/")
                credentials {
                    username = ossrhUsername
                    password = ossrhPassword
                }
            }
        }
    }
}
