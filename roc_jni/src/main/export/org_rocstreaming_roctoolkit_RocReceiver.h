/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class org_rocstreaming_roctoolkit_RocReceiver */

#ifndef _Included_org_rocstreaming_roctoolkit_RocReceiver
#define _Included_org_rocstreaming_roctoolkit_RocReceiver
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     org_rocstreaming_roctoolkit_RocReceiver
 * Method:    nativeOpen
 * Signature: (JLorg/rocstreaming/roctoolkit/RocReceiverConfig;)J
 */
JNIEXPORT jlong JNICALL Java_org_rocstreaming_roctoolkit_RocReceiver_nativeOpen
  (JNIEnv *, jclass, jlong, jobject);

/*
 * Class:     org_rocstreaming_roctoolkit_RocReceiver
 * Method:    nativeClose
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_rocstreaming_roctoolkit_RocReceiver_nativeClose
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_rocstreaming_roctoolkit_RocReceiver
 * Method:    nativeConfigure
 * Signature: (JIILorg/rocstreaming/roctoolkit/InterfaceConfig;)V
 */
JNIEXPORT void JNICALL Java_org_rocstreaming_roctoolkit_RocReceiver_nativeConfigure
  (JNIEnv *, jobject, jlong, jint, jint, jobject);

/*
 * Class:     org_rocstreaming_roctoolkit_RocReceiver
 * Method:    nativeBind
 * Signature: (JIILorg/rocstreaming/roctoolkit/Endpoint;)V
 */
JNIEXPORT void JNICALL Java_org_rocstreaming_roctoolkit_RocReceiver_nativeBind
  (JNIEnv *, jobject, jlong, jint, jint, jobject);

/*
 * Class:     org_rocstreaming_roctoolkit_RocReceiver
 * Method:    nativeUnlink
 * Signature: (JI)V
 */
JNIEXPORT void JNICALL Java_org_rocstreaming_roctoolkit_RocReceiver_nativeUnlink
  (JNIEnv *, jobject, jlong, jint);

/*
 * Class:     org_rocstreaming_roctoolkit_RocReceiver
 * Method:    nativeReadFloats
 * Signature: (J[F)V
 */
JNIEXPORT void JNICALL Java_org_rocstreaming_roctoolkit_RocReceiver_nativeReadFloats
  (JNIEnv *, jobject, jlong, jfloatArray);

#ifdef __cplusplus
}
#endif
#endif
