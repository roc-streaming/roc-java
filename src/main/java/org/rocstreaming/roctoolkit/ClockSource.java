// Code generated by bindgen.py from roc-streaming/bindgen
// roc-toolkit git tag: v0.3.0, commit: 57b932b8

package org.rocstreaming.roctoolkit;

/**
 * Clock source for sender or receiver.
 * <p>
 * Defines wo is responsible to invoke read or write in proper time.
 */
public enum ClockSource {

    /**
     * Sender or receiver is clocked by external user-defined clock.
     * <p>
     * Write and read operations are non-blocking. The user is responsible to call them in
     * time, according to the external clock.
     * <p>
     * Use when samples source (from where you read them to pass to receiver) or destination
     * (to where you write them after obtaining from sender) is active and has its own clock,
     * e.g. it is a sound card.
     */
    EXTERNAL(0),

    /**
     * Sender or receiver is clocked by an internal pipeline clock.
     * <p>
     * Write and read operations are blocking. They automatically wait until it's time to
     * process the next bunch of samples according to the configured sample rate, based on a
     * CPU timer.
     * <p>
     * Use when samples source (from where you read them to pass to receiver) or destination
     * (to where you write them after obtaining from sender) is passive and does now have
     * clock, e.g. it is a file on disk.
     */
    INTERNAL(1),
    ;

    final int value;

    ClockSource(int value) {
        this.value = value;
    }
}
