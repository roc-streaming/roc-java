// Code generated by bindgen.py from roc-streaming/bindgen
// roc-toolkit git tag: v0.3.0, commit: 57b932b8

package org.rocstreaming.roctoolkit;

/**
 * Clock synchronization profile.
 * <p>
 * Defines what latency and jitter are tolerated by clock synchronization algorithm.
 */
public enum ClockSyncProfile {

    /**
     * Default profile.
     * <p>
     * When {@link ClockSyncBackend#NIQ} is used, selects {@link ClockSyncProfile#RESPONSIVE}
     * if target latency is low, and {@link ClockSyncProfile#GRADUAL} if target latency is
     * high.
     */
    DEFAULT(0),

    /**
     * Responsive clock adjustment.
     * <p>
     * Clock speed is adjusted quickly and accurately.
     * <p>
     * Requires high precision clock adjustment, hence recommended for use with
     * {@link ResamplerBackend#BUILTIN}.
     * <p>
     * Pros:
     * <ul>
     *   <li>allows very low latency or synchronization error</li>
     * </ul>
     * <p>
     * Cons:
     * <ul>
     *   <li>does not work well with some resampler backends</li>
     *   <li>does not work well with {@link ClockSyncBackend#NIQ} if network jitter is high</li>
     * </ul>
     */
    RESPONSIVE(1),

    /**
     * Gradual clock adjustment.
     * <p>
     * Clock speed is adjusted slowly and smoothly.
     * <p>
     * Pros:
     * <ul>
     *   <li>works well even with high network jitter</li>
     *   <li>works well with any resampler backend</li>
     * </ul>
     * <p>
     * Cons:
     * <ul>
     *   <li>does not allow very low latency or synchronization error</li>
     * </ul>
     */
    GRADUAL(2),
    ;

    final int value;

    ClockSyncProfile(int value) {
        this.value = value;
    }
}
